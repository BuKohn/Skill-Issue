CREATE TABLE "AnnouncementComments" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"announcement_id" INTEGER NOT NULL,
	"author_id" INTEGER NOT NULL,
	"content" TEXT NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE "GuideComments" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"guide_id" INTEGER NOT NULL,
	"author_id" INTEGER NOT NULL,
	"content" TEXT NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE "Users" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"username" VARCHAR(255) NOT NULL UNIQUE,
	"email" VARCHAR(255) NOT NULL UNIQUE,
	"password" VARCHAR(255) NOT NULL,
	"date_joined" TIMESTAMP NOT NULL,
	"is_active" BOOLEAN NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE "Profiles" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER NOT NULL,
	"description" TEXT,
	"avatar_url" VARCHAR(255),
	"created_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE "Guides" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"title" VARCHAR(255) NOT NULL,
	"content" TEXT NOT NULL,
	"author_id" INTEGER NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	"tags" JSON NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE "Announcements" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"title" VARCHAR(255) NOT NULL,
	"description" TEXT NOT NULL,
	"author_id" INTEGER NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	"tags" JSON NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE "GuideRatings" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"guide_id" INTEGER NOT NULL,
	"reviewer_id" INTEGER NOT NULL,
	"rating" INTEGER NOT NULL CHECK(rating between 1 and 5),
	"created_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id"),
    UNIQUE (guide_id, reviewer_id)
);




CREATE TABLE "ProfileReviews" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"reviewer_id" INTEGER NOT NULL,
	"profile_id" INTEGER NOT NULL,
	"rating" INTEGER NOT NULL CHECK(rating between 1 and 5),
	"comment" TEXT NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id"),
    UNIQUE (reviewer_id, profile_id)
);




CREATE TABLE "ChatMessages" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"sender_id" INTEGER NOT NULL,
	"receiver_id" INTEGER NOT NULL,
	"message" TEXT NOT NULL,
	"timestamp" TIMESTAMP NOT NULL,
	"is_read" BOOLEAN NOT NULL,
	PRIMARY KEY("id")
);



ALTER TABLE "Profiles"
ADD CONSTRAINT fk_profiles_user
FOREIGN KEY ("user_id") REFERENCES "Users"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "Guides"
ADD CONSTRAINT fk_guides_author
FOREIGN KEY ("author_id") REFERENCES "Users"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "Announcements"
ADD CONSTRAINT fk_announcements_author
FOREIGN KEY ("author_id") REFERENCES "Users"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "GuideRatings"
ADD CONSTRAINT fk_guideratings_guide
FOREIGN KEY ("guide_id") REFERENCES "Guides"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "GuideRatings"
ADD CONSTRAINT fk_guideratings_reviewer
FOREIGN KEY ("reviewer_id") REFERENCES "Users"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "ProfileReviews"
ADD CONSTRAINT fk_profilereviews_profile
FOREIGN KEY ("profile_id") REFERENCES "Profiles"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "ProfileReviews"
ADD CONSTRAINT fk_profilereviews_reviewer
FOREIGN KEY ("reviewer_id") REFERENCES "Users"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "GuideComments"
ADD CONSTRAINT fk_guidecomments_guide
FOREIGN KEY ("guide_id") REFERENCES "Guides"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "GuideComments"
ADD CONSTRAINT fk_guidecomments_author
FOREIGN KEY ("author_id") REFERENCES "Users"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "AnnouncementComments"
ADD CONSTRAINT fk_announcementcomments_announcement
FOREIGN KEY ("announcement_id") REFERENCES "Announcements"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "AnnouncementComments"
ADD CONSTRAINT fk_announcementcomments_author
FOREIGN KEY ("author_id") REFERENCES "Users"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "ChatMessages"
ADD CONSTRAINT fk_chatmessages_sender
FOREIGN KEY ("sender_id") REFERENCES "Users"("id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "ChatMessages"
ADD CONSTRAINT fk_chatmessages_receiver
FOREIGN KEY ("receiver_id") REFERENCES "Users"("id")
ON UPDATE CASCADE ON DELETE CASCADE;